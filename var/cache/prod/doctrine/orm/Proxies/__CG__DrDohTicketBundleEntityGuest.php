<?php

namespace Proxies\__CG__\DrDoh\TicketBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Guest extends \DrDoh\TicketBundle\Entity\Guest implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'DrDoh\\TicketBundle\\Entity\\Guest' . "\0" . 'id', '' . "\0" . 'DrDoh\\TicketBundle\\Entity\\Guest' . "\0" . 'lastName', '' . "\0" . 'DrDoh\\TicketBundle\\Entity\\Guest' . "\0" . 'firstName', '' . "\0" . 'DrDoh\\TicketBundle\\Entity\\Guest' . "\0" . 'birthDate', '' . "\0" . 'DrDoh\\TicketBundle\\Entity\\Guest' . "\0" . 'ticketId', '' . "\0" . 'DrDoh\\TicketBundle\\Entity\\Guest' . "\0" . 'reservedDate', '' . "\0" . 'DrDoh\\TicketBundle\\Entity\\Guest' . "\0" . 'reservedDateId', '' . "\0" . 'DrDoh\\TicketBundle\\Entity\\Guest' . "\0" . 'bookingDate', '' . "\0" . 'DrDoh\\TicketBundle\\Entity\\Guest' . "\0" . 'discountType', '' . "\0" . 'DrDoh\\TicketBundle\\Entity\\Guest' . "\0" . 'amountPaid', '' . "\0" . 'DrDoh\\TicketBundle\\Entity\\Guest' . "\0" . 'email', '' . "\0" . 'DrDoh\\TicketBundle\\Entity\\Guest' . "\0" . 'main_guest'];
        }

        return ['__isInitialized__', '' . "\0" . 'DrDoh\\TicketBundle\\Entity\\Guest' . "\0" . 'id', '' . "\0" . 'DrDoh\\TicketBundle\\Entity\\Guest' . "\0" . 'lastName', '' . "\0" . 'DrDoh\\TicketBundle\\Entity\\Guest' . "\0" . 'firstName', '' . "\0" . 'DrDoh\\TicketBundle\\Entity\\Guest' . "\0" . 'birthDate', '' . "\0" . 'DrDoh\\TicketBundle\\Entity\\Guest' . "\0" . 'ticketId', '' . "\0" . 'DrDoh\\TicketBundle\\Entity\\Guest' . "\0" . 'reservedDate', '' . "\0" . 'DrDoh\\TicketBundle\\Entity\\Guest' . "\0" . 'reservedDateId', '' . "\0" . 'DrDoh\\TicketBundle\\Entity\\Guest' . "\0" . 'bookingDate', '' . "\0" . 'DrDoh\\TicketBundle\\Entity\\Guest' . "\0" . 'discountType', '' . "\0" . 'DrDoh\\TicketBundle\\Entity\\Guest' . "\0" . 'amountPaid', '' . "\0" . 'DrDoh\\TicketBundle\\Entity\\Guest' . "\0" . 'email', '' . "\0" . 'DrDoh\\TicketBundle\\Entity\\Guest' . "\0" . 'main_guest'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Guest $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastName($lastName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastName', [$lastName]);

        return parent::setLastName($lastName);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastName', []);

        return parent::getLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstName($firstName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', [$firstName]);

        return parent::setFirstName($firstName);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', []);

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function setBirthDate($birthDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBirthDate', [$birthDate]);

        return parent::setBirthDate($birthDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getBirthDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBirthDate', []);

        return parent::getBirthDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setTicketId($ticketId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTicketId', [$ticketId]);

        return parent::setTicketId($ticketId);
    }

    /**
     * {@inheritDoc}
     */
    public function getTicketId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTicketId', []);

        return parent::getTicketId();
    }

    /**
     * {@inheritDoc}
     */
    public function setReservedDate($reservedDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReservedDate', [$reservedDate]);

        return parent::setReservedDate($reservedDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getReservedDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReservedDate', []);

        return parent::getReservedDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getBookingDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBookingDate', []);

        return parent::getBookingDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDiscountType($discountType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDiscountType', [$discountType]);

        return parent::setDiscountType($discountType);
    }

    /**
     * {@inheritDoc}
     */
    public function getDiscountType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiscountType', []);

        return parent::getDiscountType();
    }

    /**
     * {@inheritDoc}
     */
    public function setAmountPaid($amountPaid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAmountPaid', [$amountPaid]);

        return parent::setAmountPaid($amountPaid);
    }

    /**
     * {@inheritDoc}
     */
    public function getAmountPaid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAmountPaid', []);

        return parent::getAmountPaid();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setMainGuest($main_guest)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMainGuest', [$main_guest]);

        return parent::setMainGuest($main_guest);
    }

    /**
     * {@inheritDoc}
     */
    public function getMainGuest()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMainGuest', []);

        return parent::getMainGuest();
    }

    /**
     * {@inheritDoc}
     */
    public function setBookingDate($bookingDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBookingDate', [$bookingDate]);

        return parent::setBookingDate($bookingDate);
    }

    /**
     * {@inheritDoc}
     */
    public function setReservedDateId(\DrDoh\TicketBundle\Entity\Ticket $reservedDateId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReservedDateId', [$reservedDateId]);

        return parent::setReservedDateId($reservedDateId);
    }

    /**
     * {@inheritDoc}
     */
    public function getReservedDateId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReservedDateId', []);

        return parent::getReservedDateId();
    }

}
